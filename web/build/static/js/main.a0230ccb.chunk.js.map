{"version":3,"sources":["logo.svg","Store.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","value","createStore","state","action","type","applyMiddleware","storeAPI","next","console","log","result","Game","useState","fields","setFields","message","setMessage","count","useSelector","useWebSocket","onOpen","sendJsonMessage","event","payload","lastJsonMessage","readyState","useEffect","onClick","cell","game","index","store","dispatch","className","map","field","Field","cells","props","Array","keys","Row","slice","Cell","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAe,MAA0B,iC,yCCKnCA,EAAe,CACjBC,MAAO,IAUIC,eAAY,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACzD,MAAoB,wBAAhBA,EAAOC,KACA,2BACAF,GADP,IAEIF,MAAOE,EAAMF,MAAQ,IAGtBE,IACRG,aAfsB,SAAAC,GAAQ,OAAI,SAAAC,GAAI,OAAI,SAAAJ,GACzCK,QAAQC,IAAI,UACZ,IAAIC,EAASH,EAAKJ,GAElB,OADAK,QAAQC,IAAI,SACLC,Q,eCkBX,SAASC,IAEP,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQC,aAAY,SAAAhB,GAAK,OAAIA,EAAMF,SAEzC,EAIImB,IAAa,sBAAuB,CACtCC,OAAQ,kBAAMC,EAAgB,CAAEC,MAAO,QAASC,QAAS,QAJzDF,EADF,EACEA,gBACAG,EAFF,EAEEA,gBAFF,EAGEC,WAKFC,qBAAU,WACgB,OAApBF,GAC4B,WAA1BA,EAAgBF,QAClBd,QAAQC,IAAIe,GACZV,EAAUU,EAAgBD,QAAQV,QAClCG,EAAWQ,EAAgBD,QAAQR,YAGtC,CAACS,IAEJ,IAAMG,EAAU,SAAAC,GACdP,EAAgB,CAAEC,MAAO,OAAQC,QAAS,CAAEM,KAAMD,EAAKC,KAAMC,MAAOF,EAAKE,SAEzEC,EAAMC,SAAS,CAAE5B,KAAM,yBAGzB,OAAQ,sBAAK6B,UAAU,OAAf,UACLpB,EAAOqB,KAAI,SAACC,EAAOL,GAAR,OAAmB,cAACM,EAAD,CAAmBC,MAAOF,EAAOR,QAASA,GAA9BG,MAC3C,qBAAKG,UAAU,cACf,gCAAMlB,EAAN,IAAgBE,QAIpB,SAASmB,EAAME,GACb,OAAQ,qBAAKL,UAAU,QAAf,SACL,YAAIM,MAAM,IAAIC,QAAQN,KAAI,SAAAJ,GAAK,OAAK,cAACW,EAAD,CAAiBJ,MAAOC,EAAMD,MAAOP,MAAOA,EAAOH,QAASW,EAAMX,SAAxDG,QAInD,SAASW,EAAIH,GACX,OAAQ,qBAAKL,UAAU,MAAM,aAAYK,EAAMR,MAAvC,SAEJQ,EAAMD,MAAMK,MAAoB,GAAdJ,EAAMR,MAA0B,GAAdQ,EAAMR,MAAa,IAAII,KAAI,SAACN,EAAME,GAAP,OAAkB,cAACa,EAAD,CAAkBf,KAAMA,EAAMD,QAASW,EAAMX,SAAlCG,QAKlG,SAASa,EAAKL,GACZ,IAAIL,EAAY,OAEhB,OADAA,GAAa,IAAMK,EAAMV,KAAKxB,KACtB,qBAAK6B,UAAWA,EAAWN,QAAS,kBAAMW,EAAMX,QAAQW,EAAMV,SAGzDgB,MAlFf,WACE,OACE,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,qBAAKE,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKY,IAAKC,EAAMb,UAAU,WAAWc,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEd,UAAU,WACVe,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAACvC,EAAD,YCZKwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0230ccb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {\n    createStore,\n    applyMiddleware\n} from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: 10\n}\n\nconst loggerMiddleware = storeAPI => next => action => {\n    console.log('before');\n    let result = next(action);\n    console.log('after');\n    return result;\n}\n\nexport default createStore((state = initialState, action) => {\n    if (action.type === 'counter/incremented') {\n        return {\n            ...state,\n            value: state.value + 1\n        }\n    }\n    return state\n}, applyMiddleware(loggerMiddleware))","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect, useCallback } from 'react'\nimport useWebSocket, { ReadyState } from 'react-use-websocket';\nimport store from './Store';\nimport { Provider, useSelector } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <Game />\n        </header>\n      </div>\n    </Provider>\n  );\n}\n\nfunction Game() {\n\n  const [fields, setFields] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const count = useSelector(state => state.value)\n\n  const {\n    sendJsonMessage,\n    lastJsonMessage,\n    readyState\n  } = useWebSocket('ws://localhost:8080', {\n    onOpen: () => sendJsonMessage({ event: 'start', payload: {} })\n  });\n\n  useEffect(() => {\n    if (lastJsonMessage !== null) {\n      if (lastJsonMessage.event === 'update') {\n        console.log(lastJsonMessage)\n        setFields(lastJsonMessage.payload.fields);\n        setMessage(lastJsonMessage.payload.message);\n      }\n    }\n  }, [lastJsonMessage]);\n\n  const onClick = cell => {\n    sendJsonMessage({ event: 'move', payload: { game: cell.game, index: cell.index } });\n\n    store.dispatch({ type: 'counter/incremented' })\n  };\n\n  return (<div className=\"game\">\n    {fields.map((field, index) => (<Field key={index} cells={field} onClick={onClick} />))}\n    <div className='clearBoth'></div>\n    <div>{message} {count}</div>\n  </div>);\n}\n\nfunction Field(props) {\n  return (<div className=\"field\">\n    {[...Array(10).keys()].map(index => (<Row key={index} cells={props.cells} index={index} onClick={props.onClick} />))}\n  </div>);\n}\n\nfunction Row(props) {\n  return (<div className=\"row\" data-index={props.index}>\n    {\n      props.cells.slice(props.index * 10, props.index * 10 + 10).map((cell, index) => (<Cell key={index} cell={cell} onClick={props.onClick} />))\n    }\n  </div>);\n}\n\nfunction Cell(props) {\n  let className = \"cell\";\n  className += \" \" + props.cell.type;\n  return (<div className={className} onClick={() => props.onClick(props.cell)}></div>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}